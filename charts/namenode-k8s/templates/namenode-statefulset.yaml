apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hdfs-k8s.namenode.fullname" . }}
  labels:
    app: {{ include "hdfs-k8s.namenode.fullname" . }}
    {{- include "hdfs-k8s.selectorLabels" . | nindent 4 }}
spec:
  serviceName: {{ include "hdfs-k8s.namenode.fullname" . }}
  replicas: 2
  selector:
    matchLabels:
      {{- include "hdfs-k8s.selectorLabels" . | nindent 6 }}
      app: {{ include "hdfs-k8s.namenode.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "hdfs-k8s.namenode.fullname" . }}
        {{- include "hdfs-k8s.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsGroup: {{ .Values.global.podSecurityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.global.podSecurityContext.runAsNonRoot }}
        runAsUser: {{ .Values.global.podSecurityContext.runAsUser }}
        fsGroup: {{ .Values.global.podSecurityContext.fsGroup }}
      containers:
        - name: hdfs-namenode
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          restartPolicy: Always
          env:
            - name: CURRENT_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
            - name: fs
              containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: metadata-dir
              mountPath: /hadoop/dfs/metadata
              subPath: metadata
            - name: hdfs-config
              mountPath: /hadoop/conf
              readOnly: true
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- else if .Values.global.defaultAffinityEnabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - {{ include "hdfs-k8s.namenode.name" . }}
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
            {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      volumes:
        - name: hdfs-config
          configMap:
            name: {{ include "hdfs-k8s.config.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: metadata-dir
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
         {{- if .Values.persistence.storageClass }}
           {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
           {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
           {{- end }}
         {{- end }}
         {{- if .Values.persistence.selector }}
        selector:
   {{ toYaml .Values.persistence.selector | indent 10 }}
         {{- end }}